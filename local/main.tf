## A simple terraform workflow consist of 04 steps:
# 1. write the config file as .tf
# 2. run the 'init' cmd
# 3. review the execution plan using the 'plan' cmd
# 4. apply the changes using the 'apply' cmd

# block type = resource
# provider = local
# resource type = file
# resource name = pet

# explicit dependency is only used when one resource is depending on another indirectly
# and it is not handled by terraform itself!

# implicit dependency: my-pet is created before this resource
# using for_each loop
resource "local_file" "pet" {
  filename = each.value
  for_each = toset(var.filename)
  content  = "My favorite pet is ${random_pet.my-pet.id}"

  lifecycle {
    create_before_destroy = true
    # prevent_destroy = true #use this to lock infrastructure!
  }
}

output "pets" {
  value = local_file.pet
  # Error: output refers to sensitive values!
  sensitive = true
}

## Find the bug here!! Terraform will everytime create pet1 but no desroying..
# R&D task: work with the bug by uncommenting this code!

# explicit dependency: my-pet1 is said to be created before this resource
# resource "local_file" "pet1" {
#   filename        = var.filename[1]
#   content         = "My favorite pet is ${random_pet.my-pet1.id}"
#   file_permission = "0700"
#   depends_on = [
#     random_pet.my-pet1
#   ]

#   lifecycle {
#     create_before_destroy = true
#   }
# }

# resource "local_file" "pet2" {
#   filename = var.filename[2]
#   content  = data.local_file.dog.content

#   lifecycle {
#     prevent_destroy = true
#   }
# }

resource "random_pet" "my-pet" {
  prefix    = var.prefix[0]
  separator = var.separator
  length    = var.length
}

resource "random_pet" "my-pet1" {
  prefix    = var.prefix[1]
  separator = var.separator
  length    = var.length
}

# datasources
data "local_file" "dog" {
  filename = var.datasources[0]
}

# output variables in terraform
output "pet-name" {
  value       = random_pet.my-pet.id
  description = "Record the value of pet ID generated by the random_pet resource"
}
output "pet-name1" {
  value       = random_pet.my-pet1.id
  description = "Record the value of second pet ID generated by the random_pet resource"
}
